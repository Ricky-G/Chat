name: Chat.Mobile.Android

on:
  push:
    paths-ignore:
      - 'Chat.Hub/**'
      - 'Chat.Blazor/**'
      - '**/microsoft-chat-hub.yml'
      - '**/microsoft-chat-blazor.yml'
      - '**/microsoft-chat-mobile-ios.yml'
      - 'README.md'
    branches:
      - main
      
jobs:
  Build:
    runs-on: windows-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
    
      - name: Build Debug
        run: |
          cd Chat.Mobile
          dotnet build -f net6.0-android -c Debug -o out
          ls
          cd out 
          ls
          
      - name: Upload Android artifact
        uses: actions/upload-artifact@v2
        with:
          name: android-app
          path: out
  
  Integration:
    runs-on: windows-latest
    needs: Build
    steps:
      - name: Code checkout
        uses: actions/checkout@v2
    
      - name: Test Integration
        run: |
          cd Chat.Test.Integration
          dotnet workload restore 
          dotnet test

  UI:
    runs-on: windows-latest
    needs: Integration
    steps:
      - name: Code checkout
        uses: actions/checkout@v2

      - name: Download Android artifact
        uses: actions/download-artifact@v2
        with:
          name: android-app
          
      - name: Restore MuGet (needed for legacy dotnet)
        run: nuget restore 'Chat.sln'
      
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Build UI Test
        run: msbuild 'Chat.Test.UI/Chat.Test.UI.csproj' -t:rebuild -verbosity:diag -property:Configuration=Debug
  
      - run: npm install -g appcenter-cli
        name: Install App Center CLI

      - run: appcenter test run uitest --app 'AliRezaFarahnak/Chat.Android' --devices '1ba98115' --app-path 'ms.chat.mobile.apk' --test-series "master" --build-dir 'D:\a\Chat\Chat\Chat.Test.UI\bin\Debug\' --uitest-tools-dir 'D:\a\Chat\Chat\Chat.Test.UI\bin\Debug\' --token ${{ secrets.APPCENTER_TOKEN }}
        name: Test UI
        
  Internal:
    runs-on: windows-latest
    needs: UI
    steps:
      - name: Code checkout
        uses: actions/checkout@v2
   
  GooglePlay:
    runs-on: windows-latest
    needs: Internal
    steps:
      - name: Code Checkout
        uses: actions/checkout@v2
    
      - name: Build Release
        run: |
          cd Chat.Mobile
          dotnet workload restore 
          dotnet build -f net6.0-android -c Release
          cd ..
          cd Chat.Mobile/bin/Release/net6.0-android
          ls
      - run: npm install -g appcenter-cli
        name: Install App Center CLI
      
      - run: appcenter distribute stores publish --file 'Chat.Mobile/bin/Release/net6.0-android/ms.chat.mobile-Signed.aab' --store Production --app 'AliRezaFarahnak/Chat.Android' --release-notes 'New Features..' --token ${{ secrets.APPCENTER_TOKEN }}
        name: Publish to Google Play
        
